namespace = coup

# Successful coup
coup.2 = {
	type = country_event
	placement = root

	duration = 3

	dlc = dlc004

	title = coup.2.t
	desc = {
		first_valid = {
			triggered_desc = {
				desc = coup.2.d2
				trigger = {
					NOT = {
						scope:coup_desired_law = {
							OR = {
								type = law_type:law_presidential_republic
								type = law_type:law_parliamentary_republic
								type = law_type:law_theocracy
								type = law_type:law_council_republic
							}
						}
					}
					NOT = { has_law = law_type:law_monarchy }
					scope:coup_ig = {
						law_stance = {
							law = law_type:law_monarchy
							value >= approve
						}
					}
				}
			}
			triggered_desc = {
				desc = coup.2.d
				trigger = {
					scope:coup_desired_law = {
						type = law_type:law_autocracy
					}
				}
			}
			triggered_desc = {
				desc = coup.2.d3
				trigger = {
					scope:coup_desired_law = {
						OR = {
							type = law_type:law_parliamentary_republic
							type = law_type:law_presidential_republic
						}
					}
				}
			}
			triggered_desc = {
				desc = coup.2.d4
				trigger = {
					scope:coup_desired_law = {
						type = law_type:law_council_republic
					}
				}
			}
			triggered_desc = {
				desc = coup.2.d5
				trigger = {
					scope:coup_desired_law = {
						type = law_type:law_theocracy
					}
				}
			}
		}
	}
	flavor = coup.2.f

	event_image = {
		video = "votp_barricade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	trigger = {
		# triggered by je_coup
	}
	
	immediate = {
		scope:coup_ig = {
			leader = {
				save_scope_as = coup_leader
			}
		}
		random_law = {
			limit = {
				type = law_type:law_monarchy
			}
			save_scope_as = monarchy_law
		}
		if = {
			limit = {
				AND = {
					ROOT = {
						has_variable = owes_sponsor_obligation
					}
					any_country = {
						has_variable = coup_sponsor
						var:coup_sponsor = root
					}
				}	
			}
			ROOT = {
				remove_variable = owes_sponsor_obligation
			}
			random_country = {
				limit = {
					AND = {
						has_variable = coup_sponsor
						this.var:coup_sponsor = root
					}
				}
				save_scope_as = coup_sponsor_obligation_target
			}
		}
		if = {
			limit = {
				has_law = law_type:law_monarchy
				NOT = {
					scope:coup_desired_law = {
						type = law_type:law_autocracy
					}
				}
			}
			set_variable = {
				name = abolishing_monarchy_var
				value = 0
			}
			add_journal_entry = { type = je_abolish_monarchy }
		}
		set_variable = government_couped
		activate_law = scope:coup_desired_law.type
	}
	
	option = { # standard coup
		name = coup.2.a
		trigger = {
			scope:coup_desired_law = {
				type = law_type:law_autocracy
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}

			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				NOR = {
                    has_law = law_type:law_monarchy
                    custom_tooltip = {
                        text = RRK_tt_monarchy_not_preserved
                        RRK_st_monarchy_preserved = yes
                    }
                }
			}
			scope:coup_ig = {
				leader = {
					set_character_as_ruler = yes
				}
			}
		}
		else_if = {
			limit = {
				OR = {
                    has_law = law_type:law_monarchy
                    RRK_st_is_crowned_republic = yes
                }
			}
			if = {
				limit = {
					ruler.interest_group = {
						is_same_interest_group_type = scope:coup_ig
					}
				}
				#Do nothing
			}
			else_if = {
				limit = {
					ruler.interest_group ?= {
						NOT = {
							is_same_interest_group_type = scope:coup_ig
						}
					}
					heir ?= {
						THIS.interest_group = {
							is_same_interest_group_type = scope:coup_ig
						}
					}
				}
				ruler = {
					kill_character = yes
				}
				#Do nothing
			}
			else = {
				hidden_effect = {
					heir ?= {
						kill_character = yes
					}
					ruler ?= {
						kill_character = yes
					}
				}
				create_character = {
					ruler = yes
					interest_group = scope:coup_ig
				}	
			}
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }	
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
        if = { # RRK - If crowned republic, give coup IG control of gov
            limit = {
                RRK_st_is_crowned_republic = yes
            }
            hidden_effect = {
                set_variable = {
                    name  = RRK_head_of_gov
                    value = scope:coup_ig
                }
                RRK_se_update_head_of_gov_modifier = yes
            }
        }
	}

	option = { # monarchist coup
		name = coup.2.b
		trigger = {
			NOT = {
				scope:coup_desired_law = {
					OR = {
						type = law_type:law_presidential_republic
						type = law_type:law_parliamentary_republic
						type = law_type:law_theocracy
						type = law_type:law_council_republic
					}
				}
			}
			OR = {
				scope:coup_desired_law = {
					type = law_type:law_monarchy
				}
				AND = {
					NOT = { has_law = law_type:law_monarchy }
					scope:coup_ig = {
						law_stance = {
							law = law_type:law_monarchy
							value >= approve
						}
						leader = {
							NOR = {
								has_ideology = ideology:ideology_bonapartist
								has_ideology = ideology:ideology_legitimist
								has_ideology = ideology:ideology_orleanist
							}
						}
					}
				}
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}
			
			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
        if = { # RRK - keep current king if crowned republic
            limit = {
                RRK_st_is_crowned_republic = no
            }
            create_character = { 
                ruler = yes
                interest_group = scope:coup_ig
            }
        }	
		if = {
			limit = {
				NOT = {
					has_law = law_type:law_oligarchy
				}
			}
			activate_law = law_type:law_oligarchy
		}
	}

	option = { # french monarchist coup
		name = coup.2.b
		trigger = {
			NOT = {
				scope:coup_desired_law = {
					OR = {
						type = law_type:law_presidential_republic
						type = law_type:law_parliamentary_republic
						type = law_type:law_theocracy
						type = law_type:law_council_republic
					}
				}
			}
			scope:coup_ig = {
				leader = {
					OR = {
						has_ideology = ideology:ideology_bonapartist
						has_ideology = ideology:ideology_legitimist
						has_ideology = ideology:ideology_orleanist
					}
				}
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}
			
			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				scope:coup_ig = {
					leader = {
						has_ideology = ideology:ideology_bonapartist
					}
				}
			}
			set_variable = {
				name = bonapartist_restoration_var
			}
			if = {
				limit = {
					has_variable = supporting_legitimist_var
				}
				remove_variable = supporting_legitimist_var
			}
			if = {
				limit = {
					has_variable = supporting_orleanist_var
				}
				remove_variable = supporting_orleanist_var
			}
			if = {
				limit = {
					is_player = yes
				}
				set_variable = {
					name = supporting_bonapartist_var
				}
			}
		}
		else_if = {
			limit = {
				scope:coup_ig = {
					leader = {
						has_ideology = ideology:ideology_legitimist
					}
				}
			}
			set_variable = {
				name = legitimist_restoration_var
			}
			if = {
				limit = {
					has_variable = supporting_bonapartist_var
				}
				remove_variable = supporting_bonapartist_var
			}
			if = {
				limit = {
					has_variable = supporting_orleanist_var
				}
				remove_variable = supporting_orleanist_var
			}
			if = {
				limit = {
					is_player = yes
				}
				set_variable = {
					name = supporting_legitimist_var
				}
			}
		}
		else_if = {
			limit = {
				scope:coup_ig = {
					leader = {
						has_ideology = ideology:ideology_orleanist
					}
				}
			}
			set_variable = {
				name = orleanist_restoration_var
			}
			if = {
				limit = {
					has_variable = supporting_bonapartist_var
				}
				remove_variable = supporting_bonapartist_var
			}
			if = {
				limit = {
					has_variable = supporting_legitimist_var
				}
				remove_variable = supporting_legitimist_var
			}
			if = {
				limit = {
					is_player = yes
				}
				set_variable = {
					name = supporting_orleanist_var
				}
			}
		}
		generate_french_monarch = yes
		if = {
			limit = {
				has_variable = fra_divided_monarchists_freeze
			}
			remove_variable = fra_divided_monarchists_freeze
		}
		add_journal_entry = {
			type = je_divided_monarchists
		}
		add_journal_entry = {
			type = je_cement_the_rightful_dynasty
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }	
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
		if = {
			limit = {
				NOT = {
					has_law = law_type:law_oligarchy
				}
			}
			activate_law = law_type:law_oligarchy
		}
	}
	
    option = { # Republican coup
		name = coup.2.c
		trigger = {
			scope:coup_desired_law = {
				OR = {
					type = law_type:law_presidential_republic
					type = law_type:law_parliamentary_republic
				}
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}
			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }	
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
		scope:coup_ig = {
			leader = {
				set_character_as_ruler = yes
			}
		}
		if = {
			limit = {
				has_technology_researched = political_agitation
				NOT = {
					has_law = law_type:law_single_party_state
				}
			}
			activate_law = law_type:law_single_party_state
		}
		else_if = {
			limit = {
				NOT = {
					has_law = law_type:law_oligarchy
				}
			}
			activate_law = law_type:law_oligarchy
		}
	}
    
	option = { # Theocratic coup
		name = coup.2.e
		trigger = {
			scope:coup_desired_law = {
				type = law_type:law_theocracy
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}
			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }	
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
		scope:coup_ig = {
			leader = {
				set_character_as_ruler = yes
			}
		}
		if = {
			limit = {
				NOT = {
					has_law = law_type:law_oligarchy
				}
			}
			activate_law = law_type:law_oligarchy
		}
	}
	
    option = { # Communist coup
		name = coup.2.g
		trigger = {
			scope:coup_desired_law = {
				type = law_type:law_council_republic
			}
		}
		default_option = yes
		scope:coup_ig = {
			hidden_effect = {
				if = {
					limit = {
						has_modifier = modifier_unrivaled_in_government
					}
					remove_modifier = modifier_unrivaled_in_government
				}
			}
			add_modifier = {
				name = modifier_unrivaled_in_government
				months = long_modifier_time
				is_decaying = yes
			}
		}
		if = {
			limit = {
				any_country = {
					has_variable = coup_sponsor
					this.var:coup_sponsor = root
				}
			}
			root = { set_owes_obligation_to = { country = scope:coup_sponsor_obligation_target setting = yes } }	
			scope:coup_sponsor_obligation_target = {
				remove_variable = coup_sponsor
			}
		}
		scope:coup_ig = {
			leader = {
				set_character_as_ruler = yes
			}
		}
		if = {
			limit = {
				has_technology_researched = political_agitation
				NOT = {
					has_law = law_type:law_single_party_state
				}
			}
			activate_law = law_type:law_single_party_state
		}
		else_if = {
			limit = {
				NOT = {
					has_law = law_type:law_oligarchy
				}
			}
			activate_law = law_type:law_oligarchy
		}
	}
}
