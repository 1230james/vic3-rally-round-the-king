namespace = RRK_hidden_ev

# Setup event (fired by history for initial setup)
RRK_hidden_ev.1 = {
    type = country_event
    hidden = yes
    
    immediate = {
        if = {
            limit = {
                RRK_st_is_constitutional_monarchy = yes
            }
            RRK_se_set_prime_minister = yes
            RRK_se_update_head_of_gov_modifier = yes
        }
    }
}

# Adds Head of Gov legitimacy modifier
# Done through firing a hidden event because for some reason there's certain points where calling the original scripted
# effect would lead to a modifier of +0 because the math block was having scoping problems???
RRK_hidden_ev.2 = {
    type = country_event
    hidden = yes
    
    immediate = {
        add_modifier = {
            name       = RRK_md_head_of_gov_in_gov
            multiplier = { # modifier:country_legitimacy_headofstate_add # The output of this doesn't update fast enough :/
                if = {
                    limit = { has_law = law_type:law_monarchy }
                    add   = 20
                }
                if = {
                    limit = { has_law = law_type:law_presidential_republic }
                    add   = 10
                }
                if = {
                    limit = { has_law = law_type:law_autocracy }
                    add   = 30
                }
                if = {
                    limit = { has_law = law_type:law_technocracy }
                    add   = 10
                }
                if = {
                    limit = { has_law = law_type:law_oligarchy }
                    add   = 10
                }
            }
        }
    }
}

# Add IG to government
RRK_hidden_ev.3 = {
    type = country_event
    hidden = yes
    
    immediate = {
        var:RRK_new_ruling_ig ?= {
            if = {
                limit = {
                    has_party = yes
                }
                party ?= {
                    every_member = { # set_ruling_party doesn't seem to work
                        add_ruling_interest_group = yes
                    }
                }
            }
            else = {
                add_ruling_interest_group = yes
            }
        }
        remove_variable = RRK_new_ruling_ig
        RRK_se_update_head_of_gov_modifier = yes
    }
}

# ==================================================================================================================== #

namespace = RRK_ev

# Moved to RRK_hidden_ev namespace; keeping here to explicitly indicate that the event ID is no longer in use
# RRK_ev.1 = {}

# Monarch's fate - has heir
RRK_ev.2 = {
    type      = country_event
    placement = root
    
    title     = RRK_ev_2_title
    desc      = RRK_ev_2_desc
    flavor    = RRK_ev_2_flavor

    duration = 3
    
    gui_window = event_window_2char
    
    left_icon  = var:RRK_monarch
    right_icon = var:RRK_heir
    
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
    on_opened_soundeffect  = "event:/SFX/Events/misc/2Characters"

    icon = "gfx/interface/icons/event_icons/event_portrait.dds"
    
    option = {
        name = RRK_ev_2_a
        default_option = yes
        RRK_se_abolish_monarchy = yes
        remove_variable = RRK_monarch
        remove_variable = RRK_heir
        
        ai_chance = {
            base = 10
            modifier = {
                add = 40
                any_political_movement = {
                    law_stance = {
                        law    = law_type:law_monarchy
                        value <= disapprove
                    }
                    OR = {
                        is_insurrectionary = yes
                        AND = {
                            political_movement_radicalism >= define:NPolitics|RADICALISM_PROTESTING_THRESHOLD
                            political_movement_support >= define:NPolitics|SUPPORT_SIGNIFICANT_THRESHOLD
                        }
                    }
                }
            }
            modifier = {
                add = 10
                any_interest_group = {
                    NOT = {
                        prefers_law = {
                            law = law_type:law_monarchy
                            comparison_law = prev.active_law:lawgroup_governance_principles.type
                        }
                    }
                    is_powerful = yes
                }
            }
            modifier = {
                add = 10
                is_country_type = colonial
            }
            modifier = {
                add = 20
                has_law = law_type:law_council_republic
                NOT = {
                    c:WIN ?= THIS # Grenada time
                }
            }
            modifier = { # how did we get here
                add = 20
                c:USA ?= THIS
            }
        }
    }
    
    option = {
        name = RRK_ev_2_b
        RRK_se_save_monarchy = yes
        remove_variable = RRK_monarch
        remove_variable = RRK_heir
        
        ai_chance = {
            base = 10
            modifier = {
                add = 10
                any_political_movement = {
                    law_stance = {
                        law    = law_type:law_monarchy
                        value >= disapprove
                    }
                    OR = {
                        is_insurrectionary = yes
                        AND = {
                            political_movement_radicalism >= define:NPolitics|RADICALISM_PROTESTING_THRESHOLD
                            political_movement_support >= define:NPolitics|SUPPORT_SIGNIFICANT_THRESHOLD
                        }
                    }
                }
            }
            modifier = {
                add = 10
                any_interest_group = {
                    prefers_law = {
                        law = law_type:law_monarchy
                        comparison_law = prev.active_law:lawgroup_governance_principles.type
                    }
                    is_powerful = yes
                }
            }
            modifier = {
                add = 5
                any_interest_group = {
                    prefers_law = {
                        law = law_type:law_monarchy
                        comparison_law = prev.active_law:lawgroup_governance_principles.type
                    }
                    ig_approval <= define:NPolitics|APPROVAL_THRESHOLD_UNHAPPY
                    is_marginal = no
                }
            }
            modifier = {
                add = 100
                country_has_state_religion = rel:shinto
            }
            modifier = {
                add = 20
                c:CHI ?= THIS
                has_journal_entry = je_warlord_china
                has_variable = china_warlord_explosion
                var:china_warlord_explosion <= 2
            }
            modifier = { # god save the queen
                add = 500
                c:GBR ?= THIS
            }
        }
    }
}

# Monarch's fate - No heir
RRK_ev.3 = {
    type      = country_event
    placement = root
    
    title     = RRK_ev_3_title
    desc      = RRK_ev_3_desc
    flavor    = RRK_ev_3_flavor

    duration = 3
    
    gui_window = event_window_1char_tabloid
    
    left_icon = var:RRK_monarch
    
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
    on_opened_soundeffect  = "event:/SFX/Events/misc/1Character_Banner"

    icon = "gfx/interface/icons/event_icons/event_portrait.dds"
    
    option = {
        name = RRK_ev_3_a
        default_option = yes
        RRK_se_abolish_monarchy = yes
        remove_variable = RRK_monarch
        
        ai_chance = {
            base = 10
            modifier = {
                add = 1000
                any_interest_group = {
                    has_modifier = regicide
                }
            }
            modifier = {
                add = 40
                any_political_movement = {
                    law_stance = {
                        law    = law_type:law_monarchy
                        value <= disapprove
                    }
                    OR = {
                        is_insurrectionary = yes
                        AND = {
                            political_movement_radicalism >= define:NPolitics|RADICALISM_PROTESTING_THRESHOLD
                            political_movement_support >= define:NPolitics|SUPPORT_SIGNIFICANT_THRESHOLD
                        }
                    }
                }
            }
            modifier = {
                add = 10
                any_interest_group = {
                    NOT = {
                        prefers_law = {
                            law = law_type:law_monarchy
                            comparison_law = prev.active_law:lawgroup_governance_principles.type
                        }
                    }
                    is_powerful = yes
                }
            }
            modifier = {
                add = 10
                is_country_type = colonial
            }
            modifier = {
                add = 20
                has_law = law_type:law_council_republic
                NOT = {
                    c:WIN ?= THIS # Grenada time
                }
            }
            modifier = { # how did we get here
                add = 20
                c:USA ?= THIS
            }
        }
    }
    
    option = {
        name = RRK_ev_3_b
        RRK_se_save_monarchy = yes
        remove_variable = RRK_monarch
        
        ai_chance = {
            base = 10
            modifier = {
                add = 10
                any_political_movement = {
                    law_stance = {
                        law    = law_type:law_monarchy
                        value >= disapprove
                    }
                    OR = {
                        is_insurrectionary = yes
                        AND = {
                            political_movement_radicalism >= define:NPolitics|RADICALISM_PROTESTING_THRESHOLD
                            political_movement_support >= define:NPolitics|SUPPORT_SIGNIFICANT_THRESHOLD
                        }
                    }
                }
            }
            modifier = {
                add = 10
                any_interest_group = {
                    prefers_law = {
                        law = law_type:law_monarchy
                        comparison_law = prev.active_law:lawgroup_governance_principles.type
                    }
                    is_powerful = yes
                }
            }
            modifier = {
                add = 5
                any_interest_group = {
                    prefers_law = {
                        law = law_type:law_monarchy
                        comparison_law = prev.active_law:lawgroup_governance_principles.type
                    }
                    ig_approval <= define:NPolitics|APPROVAL_THRESHOLD_UNHAPPY
                    is_marginal = no
                }
            }
            modifier = {
                add = 100
                country_has_state_religion = rel:shinto
            }
            modifier = {
                add = 20
                c:CHI ?= THIS
                has_journal_entry = je_warlord_china
                has_variable = china_warlord_explosion
                var:china_warlord_explosion <= 2
            }
            modifier = { # god save the queen
                add = 500
                c:GBR ?= THIS
            }
        }
    }
}

# Monarchy abolished - has heir
RRK_ev.4 = {
    type      = country_event
    placement = root
    
    title = RRK_ev_4_title
    desc  = {
        first_valid = {
            triggered_desc = {
                desc    = RRK_ev_4_desc_1
                trigger = {
                    var:RRK_monarch = {
                        popularity <= define:NCharacters|POPULARITY_HATED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_4_desc_2
                trigger = {
                    var:RRK_monarch = {
                        popularity > define:NCharacters|POPULARITY_HATED_THRESHOLD
                        popularity < define:NCharacters|POPULARITY_LOVED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_4_desc_3
                trigger = {
                    var:RRK_monarch = {
                        popularity >= define:NCharacters|POPULARITY_LOVED_THRESHOLD
                    }
                }
            }
        }
    }
    flavor = {
        first_valid = {
            triggered_desc = {
                desc    = RRK_ev_4_flavor_1
                trigger = {
                    var:RRK_monarch = {
                        popularity < define:NCharacters|POPULARITY_DISLIKED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_4_flavor_2
                trigger = {
                    var:RRK_monarch = {
                        popularity >= define:NCharacters|POPULARITY_DISLIKED_THRESHOLD
                        popularity <= define:NCharacters|POPULARITY_LIKED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_4_flavor_3
                trigger = {
                    var:RRK_monarch = {
                        popularity > define:NCharacters|POPULARITY_LIKED_THRESHOLD
                    }
                }
            }
        }
    }

    duration = 3
    
    gui_window = event_window_2char
    
    left_icon  = var:RRK_monarch
    right_icon = var:RRK_heir
    
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
    on_opened_soundeffect  = "event:/SFX/Events/misc/2Characters"

    icon = "gfx/interface/icons/event_icons/event_portrait.dds"
    
    option = {
        name = RRK_ev_4_a
        default_option = yes
        RRK_se_abolish_monarchy = yes
        remove_variable = RRK_monarch
        remove_variable = RRK_heir
        
        every_interest_group = {
            limit = {
                prefers_law = {
                    law = law_type:law_monarchy
                    comparison_law = prev.active_law:lawgroup_governance_principles.type
                }
            }
            RRK_se_ig_apply_abolished_monarchy_disapproval = yes
        }
    }
}

# Monarchy abolished - no heir
RRK_ev.5 = {
    type      = country_event
    placement = root
    
    title = RRK_ev_5_title
    desc  = {
        first_valid = {
            triggered_desc = {
                desc    = RRK_ev_5_desc_1
                trigger = {
                    var:RRK_monarch = {
                        popularity <= define:NCharacters|POPULARITY_HATED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_5_desc_2
                trigger = {
                    var:RRK_monarch = {
                        popularity > define:NCharacters|POPULARITY_HATED_THRESHOLD
                        popularity < define:NCharacters|POPULARITY_LOVED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_5_desc_3
                trigger = {
                    var:RRK_monarch = {
                        popularity >= define:NCharacters|POPULARITY_LOVED_THRESHOLD
                    }
                }
            }
        }
    }
    flavor = {
        first_valid = {
            triggered_desc = {
                desc    = RRK_ev_5_flavor_1
                trigger = {
                    var:RRK_monarch = {
                        popularity < define:NCharacters|POPULARITY_DISLIKED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_5_flavor_2
                trigger = {
                    var:RRK_monarch = {
                        popularity >= define:NCharacters|POPULARITY_DISLIKED_THRESHOLD
                        popularity <= define:NCharacters|POPULARITY_LIKED_THRESHOLD
                    }
                }
            }
            triggered_desc = {
                desc    = RRK_ev_5_flavor_3
                trigger = {
                    var:RRK_monarch = {
                        popularity > define:NCharacters|POPULARITY_LIKED_THRESHOLD
                    }
                }
            }
        }
    }

    duration = 3
    
    gui_window = event_window_1char_tabloid
    
    left_icon = var:RRK_monarch
    
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
    on_opened_soundeffect  = "event:/SFX/Events/misc/1Character_Banner"

    icon = "gfx/interface/icons/event_icons/event_portrait.dds"
    
    option = {
        name = RRK_ev_5_a
        default_option = yes
        RRK_se_abolish_monarchy = yes
        remove_variable = RRK_monarch
        
        every_interest_group = {
            limit = {
                prefers_law = {
                    law = law_type:law_monarchy
                    comparison_law = prev.active_law:lawgroup_governance_principles.type
                }
            }
            RRK_se_ig_apply_abolished_monarchy_disapproval = yes
        }
    }
}

# Appointing head of gov for subject
RRK_ev.6 = {
    type      = country_event
    placement = scope:target_country.capital
    
    title  = RRK_ev_6_title
    desc   = RRK_ev_6_desc
    flavor = RRK_ev_6_flavor
    
    duration = 3

    event_image = {
        video = "southamerica_aristocrats"
    }

    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

    icon = "gfx/interface/icons/event_icons/waving_flag.dds"
    
    immediate = {
        # Grab target
        random_subject_or_below = {
            limit = {
				has_variable = gubernatorial_candidate
			}
            save_scope_as = target_country
        }
        
        # Prep IG scopes
        # Option 1: our ruling IG
        random_interest_group = {
            limit = {
                is_in_government = yes
                trigger_if = { # If there's powerful IGs in government, select only from them
                    limit = {
                        any_interest_group = {
                            is_in_government = yes
                            is_powerful = yes
                        }
                    }
                    is_powerful = yes
                }
            }
            save_scope_as = our_ruling_ig
        }
        
        scope:target_country = { 
            # Option 2: their ruling IG
            random_interest_group = {
                limit = {
                    is_in_government = yes
                    trigger_if = {
                        limit = {
                            any_interest_group = {
                                is_in_government = yes
                                is_powerful = yes
                            }
                        }
                        is_powerful = yes
                    }
                }
                save_scope_as = target_ruling_ig
            }
            
            # Option 3: their most popular IG
            ordered_interest_group = {
                limit = {
                    is_marginal = no
                }
                position = 0
                order_by = interest_group_population
                
                save_scope_as = target_popular_ig
            }
        }
	}
    
    # Scopes defined:
    # target_country
    # our_ruling_ig
    # target_ruling_ig
    # target_popular_ig
    
    # Option 1: Change to our ruling IG
    option = {
        name = RRK_ev_6_a
        default_option = yes
        
        trigger = {
            scope:our_ruling_ig != scope:target_popular_ig
            scope:our_ruling_ig != scope:target_ruling_ig
        }
        
        scope:target_country = {
            if = { # Failsafe to stop from defining unneeded variables
                limit = {
                    has_variable = RRK_head_of_gov
                }
                random_interest_group = {
                    limit = {
                        is_same_interest_group_type = scope:our_ruling_ig
                    }
                    save_scope_as = their_our_ruling_ig
                }
                custom_tooltip = {
                    text = RRK_tt_appoint_our_ruling_ig
                    set_variable = {
                        name  = RRK_head_of_gov
                        value = scope:their_our_ruling_ig
                    }
                }
                add_liberty_desire = 5
                add_modifier = {
                    name  = RRK_md_appointed_head_of_gov_country
                    years = 5
                }
                scope:their_our_ruling_ig = {
                    if = { # Demarginalize if needed
                        limit = {
                            is_marginal = yes
                        }
                        set_local_variable = {
                            name  = booster_mult
                            value = {
                                add      = define:NPolitics|MARGINAL_IG_THRESHOLD
                                multiply = 1.25
                                divide   = ig_clout
                                multiply = 10
                                round    = yes
                                multiply = 10
                            }
                        }
                        add_modifier = {
                            name  = RRK_md_appointed_ig_booster
                            years = 5
                            multiplier = local_var:booster_mult
                        }
                    }
                    add_modifier = {
                        name  = RRK_md_appointed_head_of_gov_ig
                        years = 5
                    }
                    if = { # Add to gov
                        limit = {
                            is_in_government = no
                        }
                        show_as_tooltip = {
                            if = {
                                limit = {
                                    has_party = yes
                                }
                                party ?= {
                                    every_member = {
                                        add_ruling_interest_group = yes
                                    }
                                }
                            }
                            else = {
                                add_ruling_interest_group = yes
                            }
                        }
                        owner ?= {
                            hidden_effect = {
                                set_variable = {
                                    name  = RRK_new_ruling_ig
                                    value = PREV
                                }
                                trigger_event = {
                                    id   = RRK_hidden_ev.3
                                    days = 2
                                }
                            }
                        }
                    }
                }
            }
            remove_variable = gubernatorial_candidate
        }
        scope:our_ruling_ig = {
            add_modifier = {
				name = supporting_our_man
				months = short_modifier_time
			}
        }
        
        ai_chance = {
            base  = 100
        }
    }
    
    # Option 2a: Change to one of their ruling IGs
    option = {
        name = RRK_ev_6_b
        
        trigger = {
            scope:target_country = {
                var:RRK_head_of_gov != scope:target_ruling_ig
            }
            scope:our_ruling_ig = {
                NOT = {
                    is_same_interest_group_type = scope:target_ruling_ig
                }
            }
        }
        
        scope:target_country = {
            if = { # Failsafe to stop from defining unneeded variables
                limit = {
                    has_variable = RRK_head_of_gov
                }
                custom_tooltip = {
                    text = RRK_tt_appoint_target_ruling_ig
                    set_variable = {
                        name  = RRK_head_of_gov
                        value = scope:target_ruling_ig
                    }
                }
                add_modifier = {
                    name  = RRK_md_appointed_head_of_gov_country
                    years = 5
                }
                scope:target_ruling_ig = {
                    add_modifier = {
                        name  = RRK_md_appointed_head_of_gov_ig
                        years = 5
                    }
                }
            }
            remove_variable = gubernatorial_candidate
        }
        random_interest_group = {
            limit = {
                is_same_interest_group_type = scope:target_ruling_ig
            }
            add_modifier = {
				name = supporting_our_man
				months = short_modifier_time
			}
        }
        
        ai_chance = {
            base  = 25
        }
    }
    
    # Option 2b: Bolster their ruling IG
    option = {
        name = RRK_ev_6_c
        
        trigger = {
            scope:target_country = {
                var:RRK_head_of_gov = scope:target_ruling_ig
            }
        }
        
        scope:target_country = {
            if = { # Failsafe to stop from defining unneeded variables
                limit = {
                    has_variable = RRK_head_of_gov
                }
                add_modifier = {
                    name  = RRK_md_appointed_bolstered_head_of_gov
                    years = 5
                }
                scope:target_ruling_ig = {
                    add_modifier = {
                        name  = RRK_md_appointed_head_of_gov_ig
                        years = 5
                    }
                }
            }
            remove_variable = gubernatorial_candidate
        }
        random_interest_group = {
            limit = {
                is_same_interest_group_type = scope:target_ruling_ig
            }
            add_modifier = {
				name = supporting_our_man
				months = short_modifier_time
			}
        }
        
        ai_chance = {
            base  = 0
        }
    }
    
    # Option 3: Change to their popular IG
    option = {
        name = RRK_ev_6_d
        
        trigger = {
            scope:target_country = {
                var:RRK_head_of_gov != scope:target_popular_ig
            }
        }
        
        scope:target_country = {
            if = { # Failsafe to stop from defining unneeded variables
                limit = {
                    has_variable = RRK_head_of_gov
                }
                custom_tooltip = {
                    text = RRK_tt_appoint_popular_ig
                    set_variable = {
                        name  = RRK_head_of_gov
                        value = scope:target_popular_ig
                    }
                }
                add_liberty_desire = -5
                add_modifier = {
                    name  = RRK_md_appointed_bolstered_head_of_gov
                    years = 5
                }
                scope:target_popular_ig = {
                    if = { # Demarginalize if needed
                        limit = {
                            is_marginal = yes
                        }
                        set_local_variable = {
                            name  = booster_mult
                            value = {
                                add      = define:NPolitics|MARGINAL_IG_THRESHOLD
                                multiply = 1.25
                                divide   = ig_clout
                                multiply = 10
                                round    = yes
                                multiply = 10
                            }
                        }
                        add_modifier = {
                            name  = RRK_md_appointed_ig_booster
                            years = 5
                            multiplier = local_var:booster_mult
                        }
                    }
                    add_modifier = {
                        name  = RRK_md_appointed_head_of_gov_ig
                        years = 5
                    }
                    if = { # Add to gov
                        limit = {
                            is_in_government = no
                        }
                        show_as_tooltip = {
                            if = {
                                limit = {
                                    has_party = yes
                                }
                                party ?= {
                                    every_member = {
                                        add_ruling_interest_group = yes
                                    }
                                }
                            }
                            else = {
                                add_ruling_interest_group = yes
                            }
                        }
                        owner ?= {
                            hidden_effect = {
                                set_variable = {
                                    name  = RRK_new_ruling_ig
                                    value = PREV
                                }
                                trigger_event = {
                                    id   = RRK_hidden_ev.3
                                    days = 2
                                }
                            }
                        }
                    }
                }
            }
            remove_variable = gubernatorial_candidate
        }
        random_interest_group = {
            limit = {
                is_same_interest_group_type = scope:target_popular_ig
            }
            add_modifier = {
				name = supporting_our_man
				months = short_modifier_time
			}
        }
        
        ai_chance = {
            base  = 10
            modifier = {
                trigger = {
                    scope:target_country = {
                        liberty_desire >= 75
                    }
                }
                add = 90
            }
        }
    }
    
    # Cancel
    option = {
        name = RRK_ev_6_e
        
        scope:target_country = {
            remove_variable = gubernatorial_candidate
            remove_variable = gubernatorial_candidate_timed
        }
        
        ai_chance = {
            base  = 0
        }
    }
}
